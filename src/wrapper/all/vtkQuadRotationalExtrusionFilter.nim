## =========================================================================
##
## Program:   Visualization Toolkit
## Module:    vtkQuadRotationalExtrusionFilter.h
##
## Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen
## All rights reserved.
## See Copyright.txt or http://www.kitware.com/Copyright.htm for details.
##
## This software is distributed WITHOUT ANY WARRANTY; without even
## the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
## PURPOSE.  See the above copyright notice for more information.
##
## =========================================================================
## *
##  @class   vtkQuadRotationalExtrusionFilter
##  @brief   sweep polygonal data creating "skirt" from free edges and lines, and lines from vertices
##
##  vtkQuadRotationalExtrusionFilter is a modeling filter. It takes polygonal
##  data as input and generates polygonal data on output. The input dataset
##  is swept around the z-axis to create new polygonal primitives. These
##  primitives form a "skirt" or swept surface. For example, sweeping a
##  line results in a cylindrical shell, and sweeping a circle creates a
##  torus.
##
##  There are a number of control parameters for this filter. You can
##  control whether the sweep of a 2D object (i.e., polygon or triangle
##  strip) is capped with the generating geometry via the "Capping" instance
##  variable. Also, you can control the angle of rotation, and whether
##  translation along the z-axis is performed along with the rotation.
##  (Translation is useful for creating "springs".) You also can adjust
##  the radius of the generating geometry using the "DeltaRotation" instance
##  variable.
##
##  The skirt is generated by locating certain topological features. Free
##  edges (edges of polygons or triangle strips only used by one polygon or
##  triangle strips) generate surfaces. This is true also of lines or
##  polylines. Vertices generate lines.
##
##  This filter can be used to model axisymmetric objects like cylinders,
##  bottles, and wine glasses; or translational/rotational symmetric objects
##  like springs or corkscrews.
##
##  @warning
##  If the object sweeps 360 degrees, radius does not vary, and the object
##  does not translate, capping is not performed. This is because the cap
##  is unnecessary.
##
##  @warning
##  Some polygonal objects have no free edges (e.g., sphere). When swept,
##  this will result in two separate surfaces if capping is on, or no surface
##  if capping is off.
##
##  @sa
##  vtkLinearExtrusionFilter vtkRotationalExtrusionFilter
##
##  @par Thanks:
##  This class was initially developed by Daniel Aguilera, CEA/DIF
##  Ported and modified by Philippe Pebay, Kitware, 2011
##

import
  vtkFiltersModelingModule, vtkMultiBlockDataSetAlgorithm

discard "forward decl of vtkPoints"
discard "forward decl of vtkPointData"
type
  vtkQuadRotationalExtrusionFilter* {.importcpp: "vtkQuadRotationalExtrusionFilter", header: "vtkQuadRotationalExtrusionFilter.h",
                                     bycopy.} = object of vtkMultiBlockDataSetAlgorithm
    vtkQuadRotationalExtrusionFilter* {.importc: "vtkQuadRotationalExtrusionFilter".}: VTK_NEWINSTANCE

  vtkQuadRotationalExtrusionFilterSuperclass* = vtkMultiBlockDataSetAlgorithm

proc IsTypeOf*(`type`: cstring): vtkTypeBool {.
    importcpp: "vtkQuadRotationalExtrusionFilter::IsTypeOf(@)",
    header: "vtkQuadRotationalExtrusionFilter.h".}
proc IsA*(this: var vtkQuadRotationalExtrusionFilter; `type`: cstring): vtkTypeBool {.
    importcpp: "IsA", header: "vtkQuadRotationalExtrusionFilter.h".}
proc SafeDownCast*(o: ptr vtkObjectBase): ptr vtkQuadRotationalExtrusionFilter {.
    importcpp: "vtkQuadRotationalExtrusionFilter::SafeDownCast(@)",
    header: "vtkQuadRotationalExtrusionFilter.h".}
## !!!Ignored construct:  * NewInstance ( ) const { return vtkQuadRotationalExtrusionFilter :: SafeDownCast ( this -> NewInstanceInternal ( ) ) ; } static vtkIdType GetNumberOfGenerationsFromBaseType ( const char * type ) { if ( ! strcmp ( thisClass , type ) ) { return 0 ; } return 1 + vtkMultiBlockDataSetAlgorithm :: GetNumberOfGenerationsFromBaseType ( type ) ; } vtkIdType GetNumberOfGenerationsFromBase ( const char * type ) override { return this -> vtkQuadRotationalExtrusionFilter :: GetNumberOfGenerationsFromBaseType ( type ) ; } public : protected : vtkObjectBase * NewInstanceInternal ( ) const override { return vtkQuadRotationalExtrusionFilter :: New ( ) ; } public : ;
## Error: identifier expected, but got: *!!!

proc PrintSelf*(this: var vtkQuadRotationalExtrusionFilter; os: var ostream;
               indent: vtkIndent) {.importcpp: "PrintSelf",
                                  header: "vtkQuadRotationalExtrusionFilter.h".}
proc New*(): ptr vtkQuadRotationalExtrusionFilter {.
    importcpp: "vtkQuadRotationalExtrusionFilter::New(@)",
    header: "vtkQuadRotationalExtrusionFilter.h".}
type
  vtkQuadRotationalExtrusionFilterRotationAxis* {.size: sizeof(cint),
      importcpp: "vtkQuadRotationalExtrusionFilter::RotationAxis",
      header: "vtkQuadRotationalExtrusionFilter.h".} = enum
    USE_X = 0, USE_Y = 1, USE_Z = 2


proc SetAxis*(this: var vtkQuadRotationalExtrusionFilter; _arg: cint) {.
    importcpp: "SetAxis", header: "vtkQuadRotationalExtrusionFilter.h".}
proc GetAxisMinValue*(this: var vtkQuadRotationalExtrusionFilter): cint {.
    importcpp: "GetAxisMinValue", header: "vtkQuadRotationalExtrusionFilter.h".}
proc GetAxisMaxValue*(this: var vtkQuadRotationalExtrusionFilter): cint {.
    importcpp: "GetAxisMaxValue", header: "vtkQuadRotationalExtrusionFilter.h".}
## !!!Ignored construct:  virtual int GetAxis ( ) VTK_FUTURE_CONST { vtkDebugWithObjectMacro ( this , <<  returning  << Axis  of  << this -> Axis ) ; return this -> Axis ; } ;
## Error: expected ';'!!!

proc SetAxisToX*(this: var vtkQuadRotationalExtrusionFilter) {.
    importcpp: "SetAxisToX", header: "vtkQuadRotationalExtrusionFilter.h".}
proc SetAxisToY*(this: var vtkQuadRotationalExtrusionFilter) {.
    importcpp: "SetAxisToY", header: "vtkQuadRotationalExtrusionFilter.h".}
proc SetAxisToZ*(this: var vtkQuadRotationalExtrusionFilter) {.
    importcpp: "SetAxisToZ", header: "vtkQuadRotationalExtrusionFilter.h".}
proc SetAxisResolution*(this: var vtkQuadRotationalExtrusionFilter; _arg: cint) {.
    importcpp: "SetAxisResolution", header: "vtkQuadRotationalExtrusionFilter.h".}
proc GetAxisMinValueResolutionMinValue*(this: var vtkQuadRotationalExtrusionFilter): cint {.
    importcpp: "GetAxisMinValueResolutionMinValue",
    header: "vtkQuadRotationalExtrusionFilter.h".}
proc GetAxisMaxValueResolutionMaxValue*(this: var vtkQuadRotationalExtrusionFilter): cint {.
    importcpp: "GetAxisMaxValueResolutionMaxValue",
    header: "vtkQuadRotationalExtrusionFilter.h".}
## !!!Ignored construct:  virtual int GetAxisResolution ( ) VTK_FUTURE_CONST { vtkDebugWithObjectMacro ( this , <<  returning  << Resolution  of  << this -> Resolution ) ; return this -> Resolution ; } ;
## Error: expected ';'!!!

proc SetCapping*(this: var vtkQuadRotationalExtrusionFilter; _arg: vtkTypeBool) {.
    importcpp: "SetCapping", header: "vtkQuadRotationalExtrusionFilter.h".}
## !!!Ignored construct:  virtual vtkTypeBool GetAxisResolutionCapping ( ) VTK_FUTURE_CONST { vtkDebugWithObjectMacro ( this , <<  returning  << Capping  of  << this -> Capping ) ; return this -> Capping ; } ;
## Error: expected ';'!!!

proc CappingOn*(this: var vtkQuadRotationalExtrusionFilter) {.
    importcpp: "CappingOn", header: "vtkQuadRotationalExtrusionFilter.h".}
proc CappingOff*(this: var vtkQuadRotationalExtrusionFilter) {.
    importcpp: "CappingOff", header: "vtkQuadRotationalExtrusionFilter.h".}
  ## /@}
  ## /@{
  ## *
  ##  Set/Get angle of rotation.
  ##
proc SetCappingDefaultAngle*(this: var vtkQuadRotationalExtrusionFilter;
                            _arg: cdouble) {.importcpp: "SetCappingDefaultAngle",
    header: "vtkQuadRotationalExtrusionFilter.h".}
## !!!Ignored construct:  virtual double GetAxisResolutionCappingDefaultAngle ( ) VTK_FUTURE_CONST { vtkDebugWithObjectMacro ( this , <<  returning  << DefaultAngle  of  << this -> DefaultAngle ) ; return this -> DefaultAngle ; } ;
## Error: expected ';'!!!

proc RemoveAllPerBlockAngles*(this: var vtkQuadRotationalExtrusionFilter) {.
    importcpp: "RemoveAllPerBlockAngles",
    header: "vtkQuadRotationalExtrusionFilter.h".}
proc AddPerBlockAngle*(this: var vtkQuadRotationalExtrusionFilter;
                      blockId: vtkIdType; angle: cdouble) {.
    importcpp: "AddPerBlockAngle", header: "vtkQuadRotationalExtrusionFilter.h".}
proc SetCappingDefaultAngleTranslation*(this: var vtkQuadRotationalExtrusionFilter;
                                       _arg: cdouble) {.
    importcpp: "SetCappingDefaultAngleTranslation",
    header: "vtkQuadRotationalExtrusionFilter.h".}
## !!!Ignored construct:  virtual double GetAxisResolutionCappingDefaultAngleTranslation ( ) VTK_FUTURE_CONST { vtkDebugWithObjectMacro ( this , <<  returning  << Translation  of  << this -> Translation ) ; return this -> Translation ; } ;
## Error: expected ';'!!!

proc SetCappingDefaultAngleTranslationDeltaRadius*(
    this: var vtkQuadRotationalExtrusionFilter; _arg: cdouble) {.
    importcpp: "SetCappingDefaultAngleTranslationDeltaRadius",
    header: "vtkQuadRotationalExtrusionFilter.h".}
## !!!Ignored construct:  virtual double GetAxisResolutionCappingDefaultAngleTranslationDeltaRadius ( ) VTK_FUTURE_CONST { vtkDebugWithObjectMacro ( this , <<  returning  << DeltaRadius  of  << this -> DeltaRadius ) ; return this -> DeltaRadius ; } ;
## Error: expected ';'!!!
